* {
    margin: 0;
    padding: 0;
}

*, 
*::before, 
*::after {
    box-sizing: border-box;
    font-size: var(--standard-font-size);
}

body {
    min-height: 100vh;
    padding: 1rem 0;
    display: flex;
    flex-direction: column;
}

:root {
    font-family: system-ui, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
    color: var(--text-clr);
    background-color: var(--main-clr);
    --standard-font-size: 1.2rem;
    --h2-font-size: 2.8rem;
    --h3-font-size: 1.9rem;
    --main-clr: rgb(237, 237, 237);
    --accent-clr: #eeeeee;
    --shadow-clr: grey;
    --text-clr: #fef9f9;
    --neutral-text-clr: rgb(255, 255, 255);
    --p1-theme: #E58F65;
    --p1-dark-theme: #e38556;
    --p2-theme: rgb(87, 146, 255);
    --p2-dark-theme: rgb(91, 140, 232);
}

h1 {
    margin: 0 auto;
    width: fit-content;
}

h1 span {
    font-size: 5rem;
}

h1 span:nth-child(1), h1 span:nth-child(3) {
    color: var(--p1-theme);
}

h1 span:nth-child(2) {
    color: var(--p2-theme);
}

h2 {
    font-size: var(--h2-font-size);
}

form h2 {
    text-align: center;
    border-bottom: 1px solid var(--main-clr);
}

.name label, h3 {
    font-size: var(--h3-font-size);
    font-weight: 500;
}

.player-sections {
    display: flex;
    justify-items: center;
    gap: 2rem;
    flex: 1;
}

section.player > :nth-child(n) {
    padding: 0.7rem 0rem;
}

section.player {
    flex: 1;
    display: grid;
    grid-template: auto repeat(2, 1fr) repeat(2, auto) / 1fr;
    border-radius: 0.6rem;
    box-shadow: 2px 2px 10px var(--shadow-clr);
    padding: 0rem 2rem;
}

section.player.one {
    /* Defined sections vs interpolated sections */
    background-image: linear-gradient(to bottom, var(--p1-theme) 0% 20%, var(--p1-dark-theme) 30% 31% , var(--p1-theme) 41% 61%, var(--p1-dark-theme) 71% 72% , var(--p1-theme) 82% 100% );
    background-color: var(--p1-theme);
}

section.player.two {
    background-image: linear-gradient(to bottom, var(--p2-theme) 0% 20%, var(--p2-dark-theme) 30% 31% , var(--p2-theme) 41% 61%, var(--p2-dark-theme) 71% 72% , var(--p2-theme) 82% 100% );
    background-color: var(--p2-theme);
}

form {
    margin-top: 1.8rem;
    min-height: 70vh;
    padding: 0 12rem;
    display: flex;
    flex-direction: column;
    gap: 1.9rem;
}

fieldset {
    border-bottom: 1px solid var(--accent-clr);
    border-top: none;
    border-left: none;
    border-right: none;
    position: relative;
}

button, input {
    border-radius: 0.6rem;
}

input[type="radio"] {
    accent-color: var(--accent-clr);
}

li {
    display: flex;
    align-items: center;
    gap: 0.4rem;
}

li::marker {
    content: "";
}

.error {
    color: rgb(255, 66, 66);
    white-space: pre;
}

.name {
    display: flex;
    flex-direction: column;
    gap: 0.3rem;
}

.name input {
    font-size: var(--standard-font-size);
    padding: 0.8rem 0.3rem;
    background-color:var(--neutral-text-clr);
    appearance: none;
    border: none;
}

.name input:focus {
    outline: 3.7px solid var(--text-clr);
    outline-offset: max(1px, 0.05rem);
    border: none;
}

.board {
    margin: auto;
    display: grid;
    width: fit-content;
    grid-template-columns: repeat(3, auto);
    grid-template-rows: repeat(3, auto);
    background-color: var(--accent-clr);
    gap: 0.4rem;
}

.game-result {
    margin: auto;
    width: fit-content;
}

.gameplay-session h2 {
    font-weight: 500;
    color: var(--neutral-text-clr);
    text-shadow: 2px 2px 10px var(--shadow-clr);
}

.gameplay-session > :nth-child(n) {
    margin-bottom: 1rem;
}

.board button {
    background-color: var(--neutral-text-clr);
    border: none;
    width: 7rem;
    height: 7rem;
    font-size: 6rem;
    border-radius: 0;
}

.board button.player-one-move {
    color: var(--p1-theme);
}

.board button.player-two-move {
    color: var(--p2-theme);
}

.in-game-options {
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
}

button:not(.board button) {
    animation: color_change 2.7s cubic-bezier(1, 0.3, 0.3, 1) infinite alternate;
    /* animation: name duration timing-function delay iteration-count direction fill-mode; */
    appearance: none;
    border: none;
    color: var(--main-clr);
    box-shadow: 2px 2px 10px var(--shadow-clr);
}

@keyframes color_change {
    from { background-color: var(--p1-theme);}
    to {background-color: var(--p2-theme);}
}

.in-game-options > button, form > button {
    padding: 0.8rem 0.3rem;
    width: 14rem;
    margin: 0 auto;
    display: block;
    font: inherit;
    font-size: var(--standard-font-size);
}

.gameplay-session {
    display: none;
}

